/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Button".
 */
export type Button =
  | {
      title?: string | null;
      linkType?: ('External' | 'Internal') | null;
      link?: string | null;
      internalLink?:
        | ({
            relationTo: 'industries';
            value: string | Industry;
          } | null)
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null);
      /**
       * Should this open in a new browser window/tab?
       */
      openInNewTab?: boolean | null;
      isPrimary?: boolean | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardArray".
 */
export type CardArray =
  | {
      image?: {
        /**
         * Recommended size is 640x360 (16:9 aspect ratio)
         */
        image?: (string | null) | Media;
        /**
         * Choose how you want to align the background image in the hero section. This does not change the placement of the image in the flow of the page.
         */
        imagePosition?:
          | ('backgroundTop' | 'backgroundBottom' | 'backgroundCenter' | 'backgroundLeft' | 'backgroundRight')
          | null;
      };
      /**
       * Title of the image card.
       */
      cardHeader?: string | null;
      /**
       * Description of the image card.
       */
      cardText?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      includeButton?: boolean | null;
      button?: CardButtonProps;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQArrayProps".
 */
export type FAQArrayProps =
  | {
      question?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      answer?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PainPointArrayProps".
 */
export type PainPointArrayProps =
  | {
      image?: {
        /**
         * Recommended size is 640x360 (16:9 aspect ratio)
         */
        image?: (string | null) | Media;
        /**
         * Choose how you want to align the background image in the hero section. This does not change the placement of the image in the flow of the page.
         */
        imagePosition?:
          | ('backgroundTop' | 'backgroundBottom' | 'backgroundCenter' | 'backgroundLeft' | 'backgroundRight')
          | null;
      };
      painPoint?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      buttons?: Button;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsArrayProps".
 */
export type StepsArrayProps =
  | {
      step?: string | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsWithIconsArrayProps".
 */
export type StepsWithIconsArrayProps =
  | {
      image?: {
        /**
         * Recommended size is 640x360 (16:9 aspect ratio)
         */
        image?: (string | null) | Media;
        /**
         * Choose how you want to align the background image in the hero section. This does not change the placement of the image in the flow of the page.
         */
        imagePosition?:
          | ('backgroundTop' | 'backgroundBottom' | 'backgroundCenter' | 'backgroundLeft' | 'backgroundRight')
          | null;
      };
      step?: string | null;
      content?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TableOfContentsArrayProps".
 */
export type TableOfContentsArrayProps =
  | {
      /**
       * Use this to set a link to navigate to a certain header.
       */
      anchor?: string | null;
      headerText?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      id?: string | null;
    }[]
  | null;

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    categories: Category;
    posts: Post;
    media: Media;
    users: User;
    addresses: Address;
    redirects: Redirect;
    entitySeo: EntitySeo;
    stickyBanners: StickyBanner;
    industries: Industry;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    categories: {
      relatedDocs: 'posts';
    };
    users: {
      postsByUser: 'posts';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    addresses: AddressesSelect<false> | AddressesSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    entitySeo: EntitySeoSelect<false> | EntitySeoSelect<true>;
    stickyBanners: StickyBannersSelect<false> | StickyBannersSelect<true>;
    industries: IndustriesSelect<false> | IndustriesSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    nav: Nav;
    'global-settings': GlobalSetting;
    footer: Footer;
  };
  globalsSelect: {
    nav: NavSelect<false> | NavSelect<true>;
    'global-settings': GlobalSettingsSelect<false> | GlobalSettingsSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title?: string | null;
  slug?: string | null;
  hero?: HeroProps;
  content?: {
    content?:
      | (
          | ContentNoMediaProps
          | ContentWithMediaProps
          | ContentWithMapProps
          | CardSection
          | CTAProps
          | ContentWithVideoProps
          | ClientLogosProps
          | FAQProps
          | PainPointProps
          | SponsoredBlockProps
          | StepsProps
          | StepsWithIconsProps
          | SummaryProps
          | TableOfContentsProps
          | FormBlock
          | PostFeed
        )[]
      | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
    /**
     * Include an alternative URL. Overwrites the default URL.
     */
    canonical?: string | null;
    siteName?: string | null;
    seoAbout?: (string | EntitySeo)[] | null;
    seoMentions?: (string | EntitySeo)[] | null;
  };
  parentPage?: (string | null) | Page;
  pageStatus?: ('Draft' | 'Published') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroProps".
 */
export interface HeroProps {
  headline?: string | null;
  subtext?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  textPosition?: ('Left' | 'Right') | null;
  buttons?: Button;
  image?: {
    /**
     * Recommended size is 640x360 (16:9 aspect ratio)
     */
    image?: (string | null) | Media;
    /**
     * Choose how you want to align the background image in the hero section. This does not change the placement of the image in the flow of the page.
     */
    imagePosition?:
      | ('backgroundTop' | 'backgroundBottom' | 'backgroundCenter' | 'backgroundLeft' | 'backgroundRight')
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "industries".
 */
export interface Industry {
  id: string;
  title?: string | null;
  slug?: string | null;
  hero?: HeroProps;
  content?: {
    content?:
      | (
          | ContentNoMediaProps
          | ContentWithMediaProps
          | ContentWithMapProps
          | CardSection
          | CTAProps
          | ContentWithVideoProps
          | ClientLogosProps
          | FAQProps
          | PainPointProps
          | SponsoredBlockProps
          | StepsProps
          | StepsWithIconsProps
          | SummaryProps
          | TableOfContentsProps
          | FormBlock
          | PostFeed
        )[]
      | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
    /**
     * Include an alternative URL. Overwrites the default URL.
     */
    canonical?: string | null;
    siteName?: string | null;
    seoAbout?: (string | EntitySeo)[] | null;
    seoMentions?: (string | EntitySeo)[] | null;
  };
  pageStatus?: ('Draft' | 'Published') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentNoMediaProps".
 */
export interface ContentNoMediaProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  includeBgColor?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentNoMedia';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderSectionProps".
 */
export interface HeaderSectionProps {
  headerText?: string | null;
  headerLevel?: ('h2' | 'h3' | 'h4' | 'h5' | 'h6') | null;
  anchor?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentWithMediaProps".
 */
export interface ContentWithMediaProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  image?: {
    /**
     * Recommended size is 640x360 (16:9 aspect ratio)
     */
    image?: (string | null) | Media;
    /**
     * Choose how you want to align the background image in the hero section. This does not change the placement of the image in the flow of the page.
     */
    imagePosition?:
      | ('backgroundTop' | 'backgroundBottom' | 'backgroundCenter' | 'backgroundLeft' | 'backgroundRight')
      | null;
  };
  imageOrientation?: ('landscape' | 'square') | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  buttons?: Button;
  /**
   * Which side of the screen should the text show up on on bigger screens? Or do you want the image to be in the background
   */
  textPosition?: ('Left' | 'Right' | 'Foreground') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentWithMedia';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  title?: string | null;
  altDescription?: string | null;
  credit?: {
    /**
     * Leave a name for who or what created or captured this image.
     */
    creator?: string | null;
    /**
     * Choose if the creator is an organization or a person.
     */
    creatorType?: ('Person' | 'Organization') | null;
    /**
     * Link to the creator's website
     */
    creatorLink?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentWithMapProps".
 */
export interface ContentWithMapProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  mapLink?: string | null;
  address?: (string | null) | Address;
  buttons?: Button;
  /**
   * Which side of the screen should the text show up on on bigger screens?
   */
  textPosition?: ('Left' | 'Right') | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentWithMap';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses".
 */
export interface Address {
  id: string;
  locationName: string;
  streetAddress: string;
  optionalAdditionalStreetAddress?: string | null;
  city: string;
  state: string;
  zip: string;
  country?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardSection".
 */
export interface CardSection {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  card?: CardArray;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cardSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardButtonProps".
 */
export interface CardButtonProps {
  title?: string | null;
  link?: string | null;
  /**
   * Should this open in a new browser window/tab?
   */
  openInNewTab?: boolean | null;
  isPrimary?: boolean | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTAProps".
 */
export interface CTAProps {
  headerSection?: HeaderSectionProps;
  active?: boolean | null;
  buttons?: Button;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentWithVideoProps".
 */
export interface ContentWithVideoProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  video?: VideoProps;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  buttons?: Button;
  /**
   * Which side of the screen should the text show up on on bigger screens?
   */
  textPosition?: ('Left' | 'Right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentWithVideo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoProps".
 */
export interface VideoProps {
  /**
   * Copy and paste the direct link from your YouTube Studio. It should look like this: https://youtu.be/xxxxxx
   */
  video?: string | null;
  /**
   * Include only what you would like to show up on your website.
   */
  videoName?: string | null;
  /**
   * Check this box if you want the name to show up on your website.
   */
  displayVideoName?: boolean | null;
  channel?: ('YouTube' | 'Vimeo') | null;
  /**
   * Use this field to send a different description to Google.
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image?: {
    /**
     * Recommended size is 640x360 (16:9 aspect ratio)
     */
    image?: (string | null) | Media;
    /**
     * Choose how you want to align the background image in the hero section. This does not change the placement of the image in the flow of the page.
     */
    imagePosition?:
      | ('backgroundTop' | 'backgroundBottom' | 'backgroundCenter' | 'backgroundLeft' | 'backgroundRight')
      | null;
  };
  uploadDate?: string | null;
  minutes?: number | null;
  seconds?: number | null;
  creatorName?: string | null;
  description_html?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ClientLogosProps".
 */
export interface ClientLogosProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  logos?:
    | {
        image?: {
          /**
           * Recommended size is 640x360 (16:9 aspect ratio)
           */
          image?: (string | null) | Media;
          /**
           * Choose how you want to align the background image in the hero section. This does not change the placement of the image in the flow of the page.
           */
          imagePosition?:
            | ('backgroundTop' | 'backgroundBottom' | 'backgroundCenter' | 'backgroundLeft' | 'backgroundRight')
            | null;
        };
        clientLink?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'clientLogos';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQProps".
 */
export interface FAQProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  FAQ?: FAQArrayProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PainPointProps".
 */
export interface PainPointProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  painPoints?: PainPointArrayProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'painPoints';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SponsoredBlockProps".
 */
export interface SponsoredBlockProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  link?: {
    /**
     * Link to the sponsor
     */
    destination?: string | null;
    /**
     * Should this open in a new browser window/tab?
     */
    openInNewTab?: boolean | null;
    /**
     * Use this field to describe what your link does for accessibility
     */
    title?: string | null;
    /**
     * Use this field to edit the default CTA for a sponsored block.
     */
    cta?: string | null;
  };
  /**
   * Text for sponsored content.
   */
  sponsoredContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'sponsoredBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsProps".
 */
export interface StepsProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  steps?: StepsArrayProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'steps';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsWithIconsProps".
 */
export interface StepsWithIconsProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  steps?: StepsWithIconsArrayProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'stepsWithIcons';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SummaryProps".
 */
export interface SummaryProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  /**
   * A short summary of the article or page.
   */
  summary?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'summaryBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TableOfContentsProps".
 */
export interface TableOfContentsProps {
  active?: boolean | null;
  headerSection?: HeaderSectionProps;
  numberedList?: boolean | null;
  tableOfContents?: TableOfContentsArrayProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'tableOfContents';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  active?: boolean | null;
  anchor?: string | null;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostFeed".
 */
export interface PostFeed {
  headerSection?: HeaderSectionProps;
  active?: boolean | null;
  feedToAdd?: 'blog' | null;
  feedCategory?: (string | Category)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'feed';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  slug?: string | null;
  content?: {
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  relatedDocs?: {
    docs?: (string | Post)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  slug?: string | null;
  status?: ('Draft' | 'Published') | null;
  featured?: boolean | null;
  date?: string | null;
  link?: string | null;
  content?: {
    description?: string | null;
    summary?: string | null;
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    authors?: (string | User)[] | null;
    category?: (string | Category)[] | null;
    media?: {
      includeAudio?: boolean | null;
      includeVideo?: boolean | null;
      /**
       * Include a direct link to podcast audio.
       */
      audio?: string | null;
      videoHost?: ('youtube' | 'vimeo') | null;
      /**
       * Use the "youtu.be" share link
       */
      youtube?: string | null;
      /**
       * Only include the numbers after the "vimeo" portion of the link
       */
      vimeo?: string | null;
    };
    image?: {
      /**
       * Recommended size is 640x360 (16:9 aspect ratio)
       */
      image?: (string | null) | Media;
      /**
       * Choose how you want to align the background image in the hero section. This does not change the placement of the image in the flow of the page.
       */
      imagePosition?:
        | ('backgroundTop' | 'backgroundBottom' | 'backgroundCenter' | 'backgroundLeft' | 'backgroundRight')
        | null;
    };
    richText_html?: string | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
    /**
     * Include an alternative URL. Overwrites the default URL.
     */
    canonical?: string | null;
    siteName?: string | null;
    seoAbout?: (string | EntitySeo)[] | null;
    seoMentions?: (string | EntitySeo)[] | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  slug?: string | null;
  role: 'admin' | 'user' | 'viewer' | 'author';
  isAuthor?: boolean | null;
  postsByUser?: {
    docs?: (string | Post)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  postCount?: number | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "entitySeo".
 */
export interface EntitySeo {
  id: string;
  title: string;
  /**
   * See https://schema.org to see available types.
   */
  type?: string | null;
  /**
   * Name of the entity.
   */
  name?: string | null;
  /**
   * This should be an external URL to tell Google more about this entity. See https://developers.google.com/knowledge-graph/reference/rest/v1 to lookup values
   */
  sameAs?:
    | {
        /**
         * You can also use a Wikipedia link here.
         */
        source?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  source?: string | null;
  /**
   * If redirecting to another page within , just include the path (/path/sub-path). If it's an external redirect, include the whole URL (https://example.com)
   */
  destination?: string | null;
  permanent?: boolean | null;
  /**
   * Do you want this redirect to point to a domain other than ?
   */
  external?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stickyBanners".
 */
export interface StickyBanner {
  id: string;
  /**
   * Include an informative title.
   */
  name?: string | null;
  /**
   * Include a brief message.
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'addresses';
        value: string | Address;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'entitySeo';
        value: string | EntitySeo;
      } | null)
    | ({
        relationTo: 'stickyBanners';
        value: string | StickyBanner;
      } | null)
    | ({
        relationTo: 'industries';
        value: string | Industry;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  hero?: T | HeroPropsSelect<T>;
  content?:
    | T
    | {
        content?:
          | T
          | {
              contentNoMedia?: T | ContentNoMediaPropsSelect<T>;
              contentWithMedia?: T | ContentWithMediaPropsSelect<T>;
              contentWithMap?: T | ContentWithMapPropsSelect<T>;
              cardSection?: T | CardSectionSelect<T>;
              cta?: T | CTAPropsSelect<T>;
              contentWithVideo?: T | ContentWithVideoPropsSelect<T>;
              clientLogos?: T | ClientLogosPropsSelect<T>;
              faqBlock?: T | FAQPropsSelect<T>;
              painPoints?: T | PainPointPropsSelect<T>;
              sponsoredBlock?: T | SponsoredBlockPropsSelect<T>;
              steps?: T | StepsPropsSelect<T>;
              stepsWithIcons?: T | StepsWithIconsPropsSelect<T>;
              summaryBlock?: T | SummaryPropsSelect<T>;
              tableOfContents?: T | TableOfContentsPropsSelect<T>;
              formBlock?: T | FormBlockSelect<T>;
              feed?: T | PostFeedSelect<T>;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        canonical?: T;
        siteName?: T;
        seoAbout?: T;
        seoMentions?: T;
      };
  parentPage?: T;
  pageStatus?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroProps_select".
 */
export interface HeroPropsSelect<T extends boolean = true> {
  headline?: T;
  subtext?: T;
  textPosition?: T;
  buttons?: T | ButtonSelect<T>;
  image?:
    | T
    | {
        image?: T;
        imagePosition?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Button_select".
 */
export interface ButtonSelect<T extends boolean = true> {
  title?: T;
  linkType?: T;
  link?: T;
  internalLink?: T;
  openInNewTab?: T;
  isPrimary?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentNoMediaProps_select".
 */
export interface ContentNoMediaPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  content?: T;
  includeBgColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderSectionProps_select".
 */
export interface HeaderSectionPropsSelect<T extends boolean = true> {
  headerText?: T;
  headerLevel?: T;
  anchor?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentWithMediaProps_select".
 */
export interface ContentWithMediaPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  image?:
    | T
    | {
        image?: T;
        imagePosition?: T;
      };
  imageOrientation?: T;
  content?: T;
  buttons?: T | ButtonSelect<T>;
  textPosition?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentWithMapProps_select".
 */
export interface ContentWithMapPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  mapLink?: T;
  address?: T;
  buttons?: T | ButtonSelect<T>;
  textPosition?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardSection_select".
 */
export interface CardSectionSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  card?: T | CardArraySelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardArray_select".
 */
export interface CardArraySelect<T extends boolean = true> {
  image?:
    | T
    | {
        image?: T;
        imagePosition?: T;
      };
  cardHeader?: T;
  cardText?: T;
  includeButton?: T;
  button?: T | CardButtonPropsSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardButtonProps_select".
 */
export interface CardButtonPropsSelect<T extends boolean = true> {
  title?: T;
  link?: T;
  openInNewTab?: T;
  isPrimary?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTAProps_select".
 */
export interface CTAPropsSelect<T extends boolean = true> {
  headerSection?: T | HeaderSectionPropsSelect<T>;
  active?: T;
  buttons?: T | ButtonSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentWithVideoProps_select".
 */
export interface ContentWithVideoPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  video?: T | VideoPropsSelect<T>;
  content?: T;
  buttons?: T | ButtonSelect<T>;
  textPosition?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoProps_select".
 */
export interface VideoPropsSelect<T extends boolean = true> {
  video?: T;
  videoName?: T;
  displayVideoName?: T;
  channel?: T;
  description?: T;
  image?:
    | T
    | {
        image?: T;
        imagePosition?: T;
      };
  uploadDate?: T;
  minutes?: T;
  seconds?: T;
  creatorName?: T;
  description_html?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ClientLogosProps_select".
 */
export interface ClientLogosPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  logos?:
    | T
    | {
        image?:
          | T
          | {
              image?: T;
              imagePosition?: T;
            };
        clientLink?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQProps_select".
 */
export interface FAQPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  FAQ?: T | FAQArrayPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQArrayProps_select".
 */
export interface FAQArrayPropsSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PainPointProps_select".
 */
export interface PainPointPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  painPoints?: T | PainPointArrayPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PainPointArrayProps_select".
 */
export interface PainPointArrayPropsSelect<T extends boolean = true> {
  image?:
    | T
    | {
        image?: T;
        imagePosition?: T;
      };
  painPoint?: T;
  buttons?: T | ButtonSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SponsoredBlockProps_select".
 */
export interface SponsoredBlockPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  link?:
    | T
    | {
        destination?: T;
        openInNewTab?: T;
        title?: T;
        cta?: T;
      };
  sponsoredContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsProps_select".
 */
export interface StepsPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  steps?: T | StepsArrayPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsArrayProps_select".
 */
export interface StepsArrayPropsSelect<T extends boolean = true> {
  step?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsWithIconsProps_select".
 */
export interface StepsWithIconsPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  steps?: T | StepsWithIconsArrayPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsWithIconsArrayProps_select".
 */
export interface StepsWithIconsArrayPropsSelect<T extends boolean = true> {
  image?:
    | T
    | {
        image?: T;
        imagePosition?: T;
      };
  step?: T;
  content?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SummaryProps_select".
 */
export interface SummaryPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  summary?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TableOfContentsProps_select".
 */
export interface TableOfContentsPropsSelect<T extends boolean = true> {
  active?: T;
  headerSection?: T | HeaderSectionPropsSelect<T>;
  numberedList?: T;
  tableOfContents?: T | TableOfContentsArrayPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TableOfContentsArrayProps_select".
 */
export interface TableOfContentsArrayPropsSelect<T extends boolean = true> {
  anchor?: T;
  headerText?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  active?: T;
  anchor?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostFeed_select".
 */
export interface PostFeedSelect<T extends boolean = true> {
  headerSection?: T | HeaderSectionPropsSelect<T>;
  active?: T;
  feedToAdd?: T;
  feedCategory?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  content?:
    | T
    | {
        description?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  relatedDocs?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  status?: T;
  featured?: T;
  date?: T;
  link?: T;
  content?:
    | T
    | {
        description?: T;
        summary?: T;
        richText?: T;
        authors?: T;
        category?: T;
        media?:
          | T
          | {
              includeAudio?: T;
              includeVideo?: T;
              audio?: T;
              videoHost?: T;
              youtube?: T;
              vimeo?: T;
            };
        image?:
          | T
          | {
              image?: T;
              imagePosition?: T;
            };
        richText_html?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        canonical?: T;
        siteName?: T;
        seoAbout?: T;
        seoMentions?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  title?: T;
  altDescription?: T;
  credit?:
    | T
    | {
        creator?: T;
        creatorType?: T;
        creatorLink?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  role?: T;
  isAuthor?: T;
  postsByUser?: T;
  postCount?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses_select".
 */
export interface AddressesSelect<T extends boolean = true> {
  locationName?: T;
  streetAddress?: T;
  optionalAdditionalStreetAddress?: T;
  city?: T;
  state?: T;
  zip?: T;
  country?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  source?: T;
  destination?: T;
  permanent?: T;
  external?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "entitySeo_select".
 */
export interface EntitySeoSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  name?: T;
  sameAs?:
    | T
    | {
        source?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stickyBanners_select".
 */
export interface StickyBannersSelect<T extends boolean = true> {
  name?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "industries_select".
 */
export interface IndustriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  hero?: T | HeroPropsSelect<T>;
  content?:
    | T
    | {
        content?:
          | T
          | {
              contentNoMedia?: T | ContentNoMediaPropsSelect<T>;
              contentWithMedia?: T | ContentWithMediaPropsSelect<T>;
              contentWithMap?: T | ContentWithMapPropsSelect<T>;
              cardSection?: T | CardSectionSelect<T>;
              cta?: T | CTAPropsSelect<T>;
              contentWithVideo?: T | ContentWithVideoPropsSelect<T>;
              clientLogos?: T | ClientLogosPropsSelect<T>;
              faqBlock?: T | FAQPropsSelect<T>;
              painPoints?: T | PainPointPropsSelect<T>;
              sponsoredBlock?: T | SponsoredBlockPropsSelect<T>;
              steps?: T | StepsPropsSelect<T>;
              stepsWithIcons?: T | StepsWithIconsPropsSelect<T>;
              summaryBlock?: T | SummaryPropsSelect<T>;
              tableOfContents?: T | TableOfContentsPropsSelect<T>;
              formBlock?: T | FormBlockSelect<T>;
              feed?: T | PostFeedSelect<T>;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        canonical?: T;
        siteName?: T;
        seoAbout?: T;
        seoMentions?: T;
      };
  pageStatus?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav".
 */
export interface Nav {
  id: string;
  navigationLink?:
    | {
        name?: string | null;
        linkType?: ('External' | 'Internal' | 'No Link') | null;
        /**
         * Should this open in a new browser window/tab?
         */
        openInNewTab?: ('Yes' | 'No') | null;
        externalLink?: string | null;
        link?:
          | ({
              relationTo: 'pages';
              value: string | Page;
            } | null)
          | ({
              relationTo: 'posts';
              value: string | Post;
            } | null)
          | ({
              relationTo: 'industries';
              value: string | Industry;
            } | null);
        nestedLinks?:
          | {
              navigationLink?:
                | {
                    name?: string | null;
                    linkType?: ('External' | 'Internal') | null;
                    /**
                     * Should this open in a new browser window/tab?
                     */
                    openInNewTab?: ('Yes' | 'No') | null;
                    externalLink?: string | null;
                    link?:
                      | ({
                          relationTo: 'pages';
                          value: string | Page;
                        } | null)
                      | ({
                          relationTo: 'posts';
                          value: string | Post;
                        } | null)
                      | ({
                          relationTo: 'industries';
                          value: string | Industry;
                        } | null);
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-settings".
 */
export interface GlobalSetting {
  id: string;
  /**
   * Changes the name in some places, including the copyright information in the footer.
   */
  businessName?: string | null;
  /**
   * Sets the base URL of your site. (ex. https://example.com - include the https://).
   */
  domain?: string | null;
  /**
   * GTM-XXXXXXX
   */
  googleTagManagerCode?: string | null;
  phone?: {
    /**
     * Your phone number in the format +15551234567
     */
    phoneNumber?: string | null;
    /**
     * How you want the phone number to look on your site.
     */
    displayPhoneNumber?: string | null;
  };
  includeMenu?: boolean | null;
  footerAddresses?: {
    addresses?:
      | {
          address?: (string | null) | Address;
          id?: string | null;
        }[]
      | null;
  };
  logos?: {
    squareLogo?: (string | null) | Media;
    darkModeSquare?: (string | null) | Media;
    landscapeLogo?: (string | null) | Media;
    darkModeLandscape?: (string | null) | Media;
  };
  socialLinks?:
    | {
        channel?:
          | ('YouTube' | 'Instagram' | 'Facebook' | 'Pinterest' | 'Vimeo' | 'Threads' | 'LinkedIn' | 'TikTok')
          | null;
        fullLink?: string | null;
        id?: string | null;
      }[]
    | null;
  stickyBanner?: (string | null) | StickyBanner;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navigationLink?:
    | {
        name?: string | null;
        linkType?: ('External' | 'Internal' | 'No Link') | null;
        /**
         * Should this open in a new browser window/tab?
         */
        openInNewTab?: ('Yes' | 'No') | null;
        externalLink?: string | null;
        link?:
          | ({
              relationTo: 'pages';
              value: string | Page;
            } | null)
          | ({
              relationTo: 'posts';
              value: string | Post;
            } | null);
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav_select".
 */
export interface NavSelect<T extends boolean = true> {
  navigationLink?:
    | T
    | {
        name?: T;
        linkType?: T;
        openInNewTab?: T;
        externalLink?: T;
        link?: T;
        nestedLinks?:
          | T
          | {
              navigationLink?:
                | T
                | {
                    name?: T;
                    linkType?: T;
                    openInNewTab?: T;
                    externalLink?: T;
                    link?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-settings_select".
 */
export interface GlobalSettingsSelect<T extends boolean = true> {
  businessName?: T;
  domain?: T;
  googleTagManagerCode?: T;
  phone?:
    | T
    | {
        phoneNumber?: T;
        displayPhoneNumber?: T;
      };
  includeMenu?: T;
  footerAddresses?:
    | T
    | {
        addresses?:
          | T
          | {
              address?: T;
              id?: T;
            };
      };
  logos?:
    | T
    | {
        squareLogo?: T;
        darkModeSquare?: T;
        landscapeLogo?: T;
        darkModeLandscape?: T;
      };
  socialLinks?:
    | T
    | {
        channel?: T;
        fullLink?: T;
        id?: T;
      };
  stickyBanner?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navigationLink?:
    | T
    | {
        name?: T;
        linkType?: T;
        openInNewTab?: T;
        externalLink?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}